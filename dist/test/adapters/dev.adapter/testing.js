"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var dev_adapter_1 = require("../../../src/adapters/dev.adapter");
var putMany_1 = require("./putMany");
var get_1 = require("./get");
var put_1 = require("./put");
var close_1 = require("./close");
var open_1 = require("./open");
var properSetup_1 = require("./properSetup");
var remove_1 = require("./remove");
var removeMany_1 = require("./removeMany");
var getMany_1 = require("./getMany");
var getFail_1 = require("./getFail");
var emptyNamespace_1 = require("./emptyNamespace");
var count_1 = require("./count");
var all_1 = require("./all");
var getManyFail_1 = require("./getManyFail");
var stream_1 = require("./stream");
var logRecord_1 = require("./logRecord");
var logAction_1 = require("./logAction");
var empty_1 = require("./empty");
exports.adapter = new dev_adapter_1.DevAdapter();
exports.adapter.quiet = true;
exports.consoleAdapter = new dev_adapter_1.DevAdapter();
function adaptersDevAdapterTesting() {
    test("it should be able to be set up properly", properSetup_1.properSetup);
    test("it should be able to open", open_1.open);
    test("it should be able to close", close_1.close);
    test("it should be able to put", put_1.put);
    test("it should be able to put many", putMany_1.putMany);
    test("it should be able to count", count_1.count);
    test("it should be able to get", get_1.get);
    test("it should fail when trying to get a record that does not exist", getFail_1.getFail);
    test("it should be able to get many", getMany_1.getMany);
    test("it should fail when trying to get many records that do not exist", getManyFail_1.getManyFail);
    test("it should be able to remove", remove_1.remove);
    test("it should be able to remove many", removeMany_1.removeMany);
    test("it should be able to get all", all_1.all);
    test("it should be able to stream", stream_1.stream);
    test("it should be able to empty namespace", emptyNamespace_1.emptyNamespace);
    test("is should be able to log an action", logAction_1.logAction);
    test("it should be able to log record", logRecord_1.logRecord);
    test("it should be able to empty store", empty_1.empty);
}
exports.adaptersDevAdapterTesting = adaptersDevAdapterTesting;
